version: '3'

services:
  nginx:
    image: ${COMPOSE_PROJECT_NAME}_nginx:latest
    build:
      context: ./docker
      args:
        - "BUILD_ARGUMENT_ENV=dev"
      dockerfile: ./nginx/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/dev/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html:ro
    depends_on:
      - symfony
    networks:
      - internal

  symfony:
    image: ${COMPOSE_PROJECT_NAME}_symfony:latest
    build:
      context: .
      args:
        - "BUILD_ARGUMENT_ENV=dev"
        - "BUILD_ARGUMENT_DEBUG_ENABLED=false"
      dockerfile: ./Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_symfony
    expose:
      - 9000
    volumes:
      - .:/var/www/html
    environment:
      # default config to enable xdebug
      XDEBUG_CONFIG: "client_host=172.17.0.1"
    depends_on:
      - mysql
    networks:
      - internal


  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=symfony
    ports:
      - "33062:3306"
    volumes:
      - ./var/mysql-data:/var/lib/mysql
      - ./docker/dev/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - internal


  adminer:
    image: adminer
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - internal

networks:
  internal:
    driver: bridge
volumes:
  storage:
